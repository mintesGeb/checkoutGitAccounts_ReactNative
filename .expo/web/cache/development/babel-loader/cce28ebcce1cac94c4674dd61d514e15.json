{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\minte\\\\OneDrive\\\\Documents\\\\Maharishi MSD - Feb 2021\\\\cs571\\\\w3d2\\\\workshop-03-mintesGeb\\\\components\\\\Repositories.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Separator from \"./Separator\";\nimport Badge from \"./Badge\";\n\nfunction Repositories(_ref) {\n  var navigation = _ref.navigation,\n      account = _ref.route.params.account;\n\n  var _React$useState = React.useState({\n    list: [],\n    loading: false,\n    error: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  useEffect(function () {\n    function fetchRepo(url) {\n      var response, data;\n      return _regeneratorRuntime.async(function fetchRepo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                list: data\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchRepo(account.repos_url);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Badge, {\n    userInfo: {\n      avatar_url: account.avatar_url,\n      name: account.name,\n      login: account.login\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, state.list.map(function (item) {\n    return React.createElement(View, {\n      style: styles.rowContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    });\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  rowContainer: {\n    flexDirection: \"column\",\n    flex: 1,\n    padding: 10\n  },\n  name: {\n    color: \"#48BBEC\",\n    fontSize: 18,\n    paddingBottom: 5\n  },\n  stars: {\n    color: \"#48BBEC\",\n    fontSize: 14,\n    paddingBottom: 5\n  },\n  description: {\n    fontSize: 14,\n    paddingBottom: 5\n  }\n});\nexport default Repositories;","map":{"version":3,"sources":["C:/Users/minte/OneDrive/Documents/Maharishi MSD - Feb 2021/cs571/w3d2/workshop-03-mintesGeb/components/Repositories.js"],"names":["React","useEffect","Separator","Badge","Repositories","navigation","account","route","params","useState","list","loading","error","state","setState","fetchRepo","url","fetch","response","json","data","console","log","repos_url","styles","container","avatar_url","name","login","map","item","rowContainer","StyleSheet","create","flex","flexDirection","padding","color","fontSize","paddingBottom","stars","description"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,OAAOC,SAAP;AACA,OAAOC,KAAP;;AAEA,SAASC,YAAT,OAKG;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAFWC,OAEX,QAHDC,KAGC,CAFCC,MAED,CAFWF,OAEX;;AACD,wBAA0BN,KAAK,CAACS,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,OAAO,EAAE,KAF8B;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAKAb,EAAAA,SAAS,CAAC,YAAM;AACd,aAAec,SAAf,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBC,KAAK,CAACD,GAAD,CAD5B;;AAAA;AACME,cAAAA,QADN;AAAA;AAAA,+CAEmBA,QAAQ,CAACC,IAAT,EAFnB;;AAAA;AAEMC,cAAAA,IAFN;AAGEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,cAAAA,QAAQ,iCAAMD,KAAN;AAAaH,gBAAAA,IAAI,EAAEU;AAAnB,iBAAR;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAL,IAAAA,SAAS,CAACT,OAAO,CAACiB,SAAT,CAAT;AACD,GARQ,EAQN,EARM,CAAT;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAEpB,OAAO,CAACoB,UADZ;AAERC,MAAAA,IAAI,EAAErB,OAAO,CAACqB,IAFN;AAGRC,MAAAA,KAAK,EAAEtB,OAAO,CAACsB;AAHP,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACH,IAAN,CAAWmB,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD,GANA,CADH,CARF,CADF;AAoBD;;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BH,EAAAA,YAAY,EAAE;AACZI,IAAAA,aAAa,EAAE,QADH;AAEZD,IAAAA,IAAI,EAAE,CAFM;AAGZE,IAAAA,OAAO,EAAE;AAHG,GAJiB;AAS/BT,EAAAA,IAAI,EAAE;AACJU,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,aAAa,EAAE;AAHX,GATyB;AAc/BC,EAAAA,KAAK,EAAE;AACLH,IAAAA,KAAK,EAAE,SADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,aAAa,EAAE;AAHV,GAdwB;AAmB/BE,EAAAA,WAAW,EAAE;AACXH,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,aAAa,EAAE;AAFJ;AAnBkB,CAAlB,CAAf;AAyBA,eAAenC,YAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Text, View, StyleSheet, ScrollView } from \"react-native\";\r\n\r\nimport Separator from \"./Separator\";\r\nimport Badge from \"./Badge\";\r\n\r\nfunction Repositories({\r\n  navigation,\r\n  route: {\r\n    params: { account },\r\n  },\r\n}) {\r\n  const [state, setState] = React.useState({\r\n    list: [],\r\n    loading: false,\r\n    error: \"\",\r\n  });\r\n  useEffect(() => {\r\n    async function fetchRepo(url) {\r\n      let response = await fetch(url);\r\n      let data = await response.json();\r\n      console.log(data);\r\n      setState({ ...state, list: data });\r\n    }\r\n    fetchRepo(account.repos_url);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Badge\r\n        userInfo={{\r\n          avatar_url: account.avatar_url,\r\n          name: account.name,\r\n          login: account.login,\r\n        }}\r\n      />\r\n      <ScrollView>\r\n        {state.list.map((item) => {\r\n          return (\r\n            <View style={styles.rowContainer}>\r\n                {/* <Text>item</Text> */}\r\n                </View>\r\n          );\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  name: {\r\n    color: \"#48BBEC\",\r\n    fontSize: 18,\r\n    paddingBottom: 5,\r\n  },\r\n  stars: {\r\n    color: \"#48BBEC\",\r\n    fontSize: 14,\r\n    paddingBottom: 5,\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    paddingBottom: 5,\r\n  },\r\n});\r\n\r\nexport default Repositories;\r\n"]},"metadata":{},"sourceType":"module"}