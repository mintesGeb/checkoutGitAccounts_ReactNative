{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\minte\\\\OneDrive\\\\Documents\\\\Maharishi MSD - Feb 2021\\\\cs571\\\\w3d2\\\\workshop-03-mintesGeb\\\\components\\\\Search.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRoute } from \"@react-navigation/core\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar Search = function Search(_ref) {\n  var navigation = _ref.navigation;\n  var inputRef = useRef();\n\n  var _useState = useState({\n    username: \"\",\n    loading: false,\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onChangeText = function onChangeText(text) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      username: text.toLowerCase()\n    }));\n  };\n\n  useEffect(function () {\n    inputRef.current.autoFocus;\n    console.log(inputRef.current);\n  });\n\n  var searchPressed = function searchPressed() {\n    var fetchAccount = function fetchAccount(account) {\n      var response, data;\n      return _regeneratorRuntime.async(function fetchAccount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.github.com/users/\" + account));\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response.status == \"200\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 7:\n              data = _context.sent;\n              navigation.navigate(\"Dashboard\", {\n                data: data\n              });\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                error: _context.t0\n              }));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    fetchAccount(state.username);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Search for a GitHub user\"), React.createElement(TextInput, {\n    style: styles.searchInput,\n    placeholder: \"GitHub username\",\n    value: state.username,\n    onChangeText: onChangeText,\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: searchPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#48BBEC\",\n    justifyContent: \"center\",\n    padding: 30\n  },\n  title: {\n    marginBottom: 20,\n    fontSize: 25,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  searchInput: {\n    height: 50,\n    padding: 5,\n    marginRight: 5,\n    fontSize: 22,\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: \"white\",\n    color: \"white\"\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#111\",\n    alignSelf: \"center\"\n  },\n  button: {\n    height: 50,\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: \"white\",\n    marginTop: 10,\n    marginBottom: 10,\n    alignSelf: \"stretch\",\n    justifyContent: \"center\"\n  },\n  error: {\n    fontSize: 20,\n    textAlign: \"center\",\n    color: \"white\"\n  }\n});\nexport default Search;","map":{"version":3,"sources":["C:/Users/minte/OneDrive/Documents/Maharishi MSD - Feb 2021/cs571/w3d2/workshop-03-mintesGeb/components/Search.js"],"names":["useRoute","NavigationContainer","React","useEffect","useState","useRef","TextInput","TouchableOpacity","Search","navigation","inputRef","username","loading","error","state","setState","onChangeText","text","toLowerCase","current","autoFocus","console","log","searchPressed","fetchAccount","account","fetch","response","status","json","data","navigate","styles","container","title","searchInput","button","buttonText","StyleSheet","create","flex","backgroundColor","justifyContent","padding","marginBottom","fontSize","textAlign","color","height","marginRight","borderWidth","borderRadius","borderColor","alignSelf","flexDirection","marginTop"],"mappings":"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","sourcesContent":["import { useRoute } from \"@react-navigation/core\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nconst Search = ({ navigation }) => {\r\n  const inputRef = useRef();\r\n\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n  });\r\n\r\n  const onChangeText = (text) => {\r\n    setState({ ...state, username: text.toLowerCase() });\r\n  };\r\n  useEffect(() => {\r\n    inputRef.current.autoFocus\r\n    console.log(inputRef.current);\r\n  });\r\n\r\n  const searchPressed = () => {\r\n    const fetchAccount = async (account) => {\r\n      try {\r\n        const response = await fetch(`https://api.github.com/users/${account}`);\r\n\r\n        if (response.status == \"200\") {\r\n          const data = await response.json();\r\n\r\n          navigation.navigate(\"Dashboard\", { data });\r\n        }\r\n      } catch (err) {\r\n        setState({ ...state, error: err });\r\n      }\r\n    };\r\n    fetchAccount(state.username);\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Search for a GitHub user</Text>\r\n      <TextInput\r\n        style={styles.searchInput}\r\n        placeholder=\"GitHub username\"\r\n        value={state.username}\r\n        onChangeText={onChangeText}\r\n        ref={inputRef}\r\n        // autoFocus={true}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={searchPressed}>\r\n        <Text style={styles.buttonText}>Search</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#48BBEC\",\r\n    justifyContent: \"center\",\r\n    padding: 30,\r\n  },\r\n  title: {\r\n    marginBottom: 20,\r\n    fontSize: 25,\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n  },\r\n  searchInput: {\r\n    height: 50,\r\n    padding: 5,\r\n    marginRight: 5,\r\n    fontSize: 22,\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    borderColor: \"white\",\r\n    color: \"white\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    color: \"#111\",\r\n    alignSelf: \"center\",\r\n  },\r\n  button: {\r\n    height: 50,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    borderColor: \"white\",\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    alignSelf: \"stretch\",\r\n    justifyContent: \"center\",\r\n  },\r\n  error: {\r\n    fontSize: 20,\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n  },\r\n});\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}